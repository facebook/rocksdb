name: facebook/rocksdb/pr-jobs
on: [push, pull_request]
permissions: {}
jobs:
  # NOTE: multiple workflows would be recommended, but the current GHA UI in
  # PRs doesn't make it clear when there's an overall error with a workflow,
  # making it easy to overlook something broken. Grouping everything into one
  # workflow minimizes the problem because it will be suspicious if there are
  # no GHA results.
  #
  # The if: ${{ github.repository_owner == 'facebook' }} lines prevent the
  # jobs from attempting to run on repo forks, because of a few problems:
  # * runs-on labels are repository (owner) specific, so the job might wait
  # for days waiting for a runner that simply isn't available.
  # * Pushes to branches on forks for pull requests (the normal process) would
  # run the workflow jobs twice: once in the pull-from fork and once for the PR
  # destination repo. This is wasteful and dumb.
  # * It is not known how to avoid copy-pasting the line to each job,
  # increasing the risk of misconfiguration, especially on forks that might
  # want to run with this GHA setup.
  #
  # DEBUGGING WITH SSH: Temporarily add this as a job step, either before the
  # step of interest without the "if:" line or after the failing step with the
  # "if:" line. Then use ssh command printed in CI output.
  #  - name: Setup tmate session # TEMPORARY!
  #    if: ${{ failure() }}
  #    uses: mxschmitt/action-tmate@v3
  #    with:
  #      limit-access-to-actor: true

  # ======================== Fast Initial Checks ====================== #
  check-format-and-targets:
    if: ${{ github.repository_owner == 'facebook' }}
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4.1.0
      with:
        fetch-depth: 0 # Need full checkout to determine merge base
        fetch-tags: true
    - uses: "./.github/actions/setup-upstream"
    - name: Setup Python
      uses: actions/setup-python@v5
    - name: Install Dependencies
      run: python -m pip install --upgrade pip
    - name: Install argparse
      run: pip install argparse
    - name: Download clang-format-diff.py
      run: wget https://rocksdb-deps.s3.us-west-2.amazonaws.com/llvm/llvm-project/release/12.x/clang/tools/clang-format/clang-format-diff.py
    - name: Check format
      run: VERBOSE_CHECK=1 make check-format
    - name: Compare buckify output
      run: make check-buck-targets
    - name: Simple source code checks
      run: make check-sources
    - name: Sanity check check_format_compatible.sh
      run: |-
        export TEST_TMPDIR=/dev/shm/rocksdb
        rm -rf /dev/shm/rocksdb
        mkdir /dev/shm/rocksdb
        git reset --hard
        git config --global --add safe.directory /__w/rocksdb/rocksdb
        SANITY_CHECK=1 LONG_TEST=1 tools/check_format_compatible.sh
  # ========================= Linux With Tests ======================== #
  build-linux:
    if: ${{ github.repository_owner == 'facebook' }}
    runs-on:
      labels: 16-core-ubuntu
    container:
      image: ghcr.io/facebook/rocksdb_ubuntu:22.1
      options: --shm-size=16gb
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/pre-steps"
    - run: make V=1 J=32 -j32 check
    - uses: "./.github/actions/post-steps"
  build-linux-cmake-mingw:
    if: ${{ github.repository_owner == 'facebook' }}
    runs-on:
      labels: 4-core-ubuntu
    container:
      image: ghcr.io/facebook/rocksdb_ubuntu:24.0
      options: --shm-size=16gb
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/pre-steps"
    - run: update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
    - name: Build cmake-mingw
      run: |-
        export PATH=$JAVA_HOME/bin:$PATH
        echo "JAVA_HOME=${JAVA_HOME}"
        which java && java -version
        which javac && javac -version
        mkdir build && cd build && cmake -DJNI=1 -DWITH_GFLAGS=OFF .. -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ -DCMAKE_SYSTEM_NAME=Windows && make -j4 rocksdb rocksdbjni
    - uses: "./.github/actions/post-steps"
  build-linux-cmake-with-folly:
    if: ${{ github.repository_owner == 'facebook' }}
    runs-on:
      labels: 16-core-ubuntu
    container:
      image: ghcr.io/facebook/rocksdb_ubuntu:22.1
      options: --shm-size=16gb
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/pre-steps"
    - uses: "./.github/actions/setup-folly"
    - uses: "./.github/actions/cache-folly"
      id: cache-folly
    - uses: "./.github/actions/build-folly"
      with:
        cache-hit: ${{ steps.cache-folly.outputs.cache-hit }}
    - run: "(mkdir build && cd build && cmake -DUSE_FOLLY=1 -DWITH_GFLAGS=1 -DROCKSDB_BUILD_SHARED=0 .. && make V=1 -j20 && ctest -j20)"
    - uses: "./.github/actions/post-steps"
  build-linux-make-with-folly:
    if: ${{ github.repository_owner == 'facebook' }}
    runs-on:
      labels: 16-core-ubuntu
    container:
      image: ghcr.io/facebook/rocksdb_ubuntu:22.1
      options: --shm-size=16gb
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/pre-steps"
    - uses: "./.github/actions/setup-folly"
    - uses: "./.github/actions/cache-folly"
      id: cache-folly
    - uses: "./.github/actions/build-folly"
      with:
        cache-hit: ${{ steps.cache-folly.outputs.cache-hit }}
    - run: USE_FOLLY=1 LIB_MODE=static V=1 make -j32 check
    - uses: "./.github/actions/post-steps"
  build-linux-make-with-folly-lite-no-test:
    if: ${{ github.repository_owner == 'facebook' }}
    runs-on:
      labels: 16-core-ubuntu
    container:
      image: ghcr.io/facebook/rocksdb_ubuntu:22.1
      options: --shm-size=16gb
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/pre-steps"
    - uses: "./.github/actions/setup-folly"
    - run: USE_FOLLY_LITE=1 EXTRA_CXXFLAGS=-DGLOG_USE_GLOG_EXPORT V=1 make -j32 all
    - uses: "./.github/actions/post-steps"
  build-linux-cmake-with-folly-coroutines:
    if: ${{ github.repository_owner == 'facebook' }}
    runs-on:
      labels: 16-core-ubuntu
    container:
      image: ghcr.io/facebook/rocksdb_ubuntu:22.1
      options: --shm-size=16gb
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/pre-steps"
    - uses: "./.github/actions/setup-folly"
    - uses: "./.github/actions/cache-folly"
      id: cache-folly
    - uses: "./.github/actions/build-folly"
      with:
        cache-hit: ${{ steps.cache-folly.outputs.cache-hit }}
    - run: "(mkdir build && cd build && cmake -DUSE_COROUTINES=1 -DWITH_GFLAGS=1 -DROCKSDB_BUILD_SHARED=0 .. && make V=1 -j20 && ctest -j20)"
    - uses: "./.github/actions/post-steps"
  build-linux-clang-18-asan-ubsan-with-folly:
    if: ${{ github.repository_owner == 'facebook' }}
    runs-on:
      labels: 16-core-ubuntu
    container:
      image: ghcr.io/facebook/rocksdb_ubuntu:24.0
      options: --shm-size=16gb
    env:
      CC: clang-18
      CXX: clang++-18
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/pre-steps"
    - uses: "./.github/actions/setup-folly"
    - uses: "./.github/actions/build-folly"
    - run: LIB_MODE=static USE_CLANG=1 USE_FOLLY=1 COMPILE_WITH_UBSAN=1 COMPILE_WITH_ASAN=1 make -j32 check
    - uses: "./.github/actions/post-steps"
